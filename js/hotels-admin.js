// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–µ–ª—è–º–∏
async function loadHotels() {
    try {
        const token = localStorage.getItem("authToken");
        if (!token) {
            window.location.href = "/auth.html";
            return;
        }

        const response = await fetch("https://api.web95.tech/api/v1/admin/hotels", {
            method: "GET",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
        });

        if (response.status === 401) {
            localStorage.removeItem("authToken");
            window.location.href = "/auth.html";
            alert("–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.");
            return;
        }

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }

        const responseData = await response.json();
        const hotels = responseData.data || [];

        const tbody = document.getElementById("hotelsTableBody");
        tbody.innerHTML = "";

        hotels.forEach((hotel) => {
            const row = tbody.insertRow();
            row.innerHTML = `
                <td>${hotel.id}</td>
                <td>${hotel.name}</td>
                <td>${hotel.city}</td>
                <td>${'‚òÖ'.repeat(hotel.stars)}</td>
                <td>${hotel.distance} –∫–º</td>
                <td>${hotel.meals || '-'}</td>
                <td>${hotel.guests || '-'}</td>
                <td>${hotel.transfer || '-'}</td>
                <td>${new Date(hotel.created_at).toLocaleDateString("ru-RU")}</td>
                <td class="admin-table__actions">
                    <button class="admin-table__btn admin-table__btn--edit" onclick="editHotel(${hotel.id})">
                        ‚úèÔ∏è
                    </button>
                    <button class="admin-table__btn admin-table__btn--delete" onclick="deleteHotel(${hotel.id})">
                        üóëÔ∏è
                    </button>
                </td>
            `;
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–µ–ª–µ–π:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–µ–ª–µ–π");
    }
}

async function submitHotelForm(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    
    const hotelData = {
        name: formData.get("name"),
        city: formData.get("city"),
        stars: parseInt(formData.get("stars")),
        distance: parseFloat(formData.get("distance")),
        distance_text: formData.get("distance_text"),
        meals: formData.get("meals"),
        guests: formData.get("guests"),
        transfer: formData.get("transfer"),
        urls: formData.get("urls")
    };

    try {
        const token = localStorage.getItem("authToken");
        const response = await fetch("https://api.web95.tech/api/v1/admin/hotels", {
            method: "POST",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
            body: JSON.stringify(hotelData),
        });

        if (response.status === 401) {
            localStorage.removeItem("authToken");
            window.location.href = "/auth.html";
            return;
        }

        if (response.ok) {
            closeModal("hotelModal");
            event.target.reset();
            loadHotels();
            alert("–û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");
        } else {
            const errorData = await response.json();
            throw new Error(errorData.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–µ–ª—è");
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç–µ–ª—å: " + error.message);
    }
}

async function editHotel(hotelId) {
    try {
        const token = localStorage.getItem("authToken");
        const response = await fetch(`https://api.web95.tech/api/v1/admin/hotels/${hotelId}`, {
            method: "GET",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
        });

        if (response.status === 401) {
            localStorage.removeItem("authToken");
            window.location.href = "/auth.html";
            return;
        }

        const responseData = await response.json();
        const hotelData = responseData.data;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        document.querySelector('#editHotelModal input[name="hotel_id"]').value = hotelId;
        document.querySelector('#editHotelModal input[name="name"]').value = hotelData.name || "";
        document.querySelector('#editHotelModal input[name="city"]').value = hotelData.city || "";
        document.querySelector('#editHotelModal input[name="stars"]').value = hotelData.stars || "";
        document.querySelector('#editHotelModal input[name="distance"]').value = hotelData.distance || "";
        document.querySelector('#editHotelModal input[name="distance_text"]').value = hotelData.distance_text || "";
        document.querySelector('#editHotelModal input[name="meals"]').value = hotelData.meals || "";
        document.querySelector('#editHotelModal input[name="guests"]').value = hotelData.guests || "";
        document.querySelector('#editHotelModal input[name="transfer"]').value = hotelData.transfer || "";
        document.querySelector('#editHotelModal input[name="photo_url"]').value = hotelData.urls || "";

        openModal("editHotelModal");
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª—è");
    }
}

async function submitEditHotelForm(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    const hotelId = formData.get("hotel_id");
    const urlsText = formData.get("urls");
    const urlsArray = urlsText ? urlsText.split('\n').filter(url => url.trim() !== '') : [];

    const hotelData = {
        name: formData.get("name"),
        city: formData.get("city"),
        stars: parseInt(formData.get("stars")),
        distance: parseFloat(formData.get("distance")),
        distance_text: formData.get("distance_text"),
        meals: formData.get("meals"),
        guests: formData.get("guests"),
        transfer: formData.get("transfer"),
        urls: urlsArray
    };

    try {
        const token = localStorage.getItem("authToken");
        const response = await fetch(`https://api.web95.tech/api/v1/admin/hotels/${hotelId}`, {
            method: "PUT",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
            body: JSON.stringify(hotelData),
        });

        if (response.status === 401) {
            localStorage.removeItem("authToken");
            window.location.href = "/auth.html";
            return;
        }

        if (response.ok) {
            closeModal("editHotelModal");
            loadHotels();
            alert("–û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!");
        } else {
            const errorData = await response.json();
            throw new Error(errorData.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–µ–ª—è");
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç–µ–ª—å: " + error.message);
    }
}

async function deleteHotel(hotelId) {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ—Ç–µ–ª—å #${hotelId}?`)) {
        try {
            const token = localStorage.getItem("authToken");
            const response = await fetch(`https://api.web95.tech/api/v1/admin/hotels/${hotelId}`, {
                method: "DELETE",
                headers: {
                    Authorization: `Bearer ${token}`,
                },
            });

            if (response.status === 401) {
                localStorage.removeItem("authToken");
                window.location.href = "/auth.html";
                return;
            }

            if (response.ok) {
                loadHotels();
                alert("–û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!");
            } else {
                throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–µ–ª—è");
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞:", error);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ—Ç–µ–ª—å");
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–æ—Ç–æ –æ—Ç–µ–ª—è
async function uploadHotelPhotos(files) {
    if (!files || files.length === 0) return;
    
    const token = localStorage.getItem("authToken");
    const urlsTextarea = document.querySelector('#hotelModal textarea[name="urls"]');
    const currentUrls = urlsTextarea.value ? urlsTextarea.value.split('\n') : [];

    try {
        for (let file of files) {
            const formData = new FormData();
            formData.append('files', file);

            const response = await fetch('https://api.web95.tech/api/v1/admin/upload', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                body: formData
            });

            if (response.ok) {
                const result = await response.json();
                if (result.data && result.data.length > 0) {
                    currentUrls.push(result.data[0].url);
                }
            } else {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ');
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º textarea —Å URL
        urlsTextarea.value = currentUrls.join('\n');
        alert('–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ');
    }
}

// –û–±–Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é submitHotelForm –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–æ–º URL
async function submitHotelForm(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    
    // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ textarea –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤
    const urlsText = formData.get("urls");
    const urlsArray = urlsText ? urlsText.split('\n').filter(url => url.trim() !== '') : [];

    const hotelData = {
        name: formData.get("name"),
        city: formData.get("city"),
        stars: parseInt(formData.get("stars")),
        distance: parseFloat(formData.get("distance")),
        distance_text: formData.get("distance_text"),
        meals: formData.get("meals"),
        guests: formData.get("guests"),
        transfer: formData.get("transfer"),
        urls: urlsArray // –¢–µ–ø–µ—Ä—å —ç—Ç–æ –º–∞—Å—Å–∏–≤
    };

    try {
        const token = localStorage.getItem("authToken");
        const response = await fetch("https://api.web95.tech/api/v1/admin/hotels", {
            method: "POST",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
            body: JSON.stringify(hotelData),
        });

        if (response.status === 401) {
            localStorage.removeItem("authToken");
            window.location.href = "/auth.html";
            return;
        }

        if (response.ok) {
            closeModal("hotelModal");
            event.target.reset();
            loadHotels();
            alert("–û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");
        } else {
            const errorData = await response.json();
            throw new Error(errorData.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–µ–ª—è");
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç–µ–ª—å: " + error.message);
    }
}

// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª—è
async function editHotel(hotelId) {
    try {
        const token = localStorage.getItem("authToken");
        const response = await fetch(`https://api.web95.tech/api/v1/admin/hotels/${hotelId}`, {
            method: "GET",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
        });

        if (response.status === 401) {
            localStorage.removeItem("authToken");
            window.location.href = "/auth.html";
            return;
        }

        const responseData = await response.json();
        const hotelData = responseData.data;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        document.querySelector('#editHotelModal input[name="hotel_id"]').value = hotelId;
        document.querySelector('#editHotelModal input[name="name"]').value = hotelData.name || "";
        document.querySelector('#editHotelModal input[name="city"]').value = hotelData.city || "";
        document.querySelector('#editHotelModal input[name="stars"]').value = hotelData.stars || "";
        document.querySelector('#editHotelModal input[name="distance"]').value = hotelData.distance || "";
        document.querySelector('#editHotelModal input[name="distance_text"]').value = hotelData.distance_text || "";
        document.querySelector('#editHotelModal input[name="meals"]').value = hotelData.meals || "";
        document.querySelector('#editHotelModal input[name="guests"]').value = hotelData.guests || "";
        document.querySelector('#editHotelModal input[name="transfer"]').value = hotelData.transfer || "";
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º textarea —Å URL (–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É)
        const urlsArray = hotelData.urls || [];
        document.querySelector('#editHotelModal textarea[name="urls"]').value = urlsArray.join('\n');

        openModal("editHotelModal");
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª—è");
    }
}

// –î–æ–±–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function uploadEditHotelPhotos(files) {
    if (!files || files.length === 0) return;
    
    if (!confirm('–ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤—ã—Ö —Ñ–æ—Ç–æ —Å—Ç–∞—Ä—ã–µ URL –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
        return;
    }
    
    const token = localStorage.getItem("authToken");
    const urlsTextarea = document.querySelector('#editHotelModal textarea[name="urls"]');
    
    try {
        const newUrls = [];
        
        for (let file of files) {
            const formData = new FormData();
            formData.append('files', file);

            const response = await fetch('https://api.web95.tech/api/v1/admin/upload', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`
                },
                body: formData
            });

            if (response.ok) {
                const result = await response.json();
                if (result.data && result.data.length > 0) {
                    newUrls.push(result.data[0].url);
                }
            } else {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ');
            }
        }

        // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ URL –Ω–∞ –Ω–æ–≤—ã–µ
        urlsTextarea.value = newUrls.join('\n');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ');
    }
}
async function uploadPhoto(file) {
    if (!file) return;
    
    const token = localStorage.getItem("authToken");
    const formData = new FormData();
    formData.append('files', file);

    try {
        const response = await fetch('https://api.web95.tech/api/v1/admin/upload', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            body: formData
        });

        if (response.ok) {
            const result = await response.json();
            // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π URL –≤ –∏–Ω–ø—É—Ç –¥–ª—è —Ñ–æ—Ç–æ
            document.querySelector('input[name="photo_url"]').value = result.data[0].url;
            alert('–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!');
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ');
    }
}

// Modal functions
function openModal(modalId) {
    document.getElementById(modalId).classList.add("active");
}

function closeModal(modalId) {
    document.getElementById(modalId).classList.remove("active");
}

// Close modal when clicking outside
window.addEventListener("click", function (e) {
    if (e.target.classList.contains("modal")) {
        e.target.classList.remove("active");
    }
});

// –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–µ–ª–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", function() {
    loadHotels();
});