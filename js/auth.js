// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã API
const API_BASE = "http://212.193.51.76:8080/api/v1";
const REGISTER_URL = `${API_BASE}/auth/register`;
const LOGIN_URL = `${API_BASE}/auth/login`;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const errorMessage = document.getElementById("errorMessage");
const successMessage = document.getElementById("successMessage");

function switchTab(tabName) {
  const tabs = document.querySelectorAll(".auth-tab");
  const authForm = document.querySelector(".auth-form");
  const title = document.querySelector(".auth-form__title");
  const subtitle = document.querySelector(".auth-form__subtitle");
  const submitBtn = document.querySelector(".form-submit");

  tabs.forEach((tab) => tab.classList.remove("active"));
  document
    .querySelector(`[onclick="switchTab('${tabName}')"]`)
    .classList.add("active");

  authForm.setAttribute("data-tab", tabName);

  if (tabName === "register") {
    title.textContent = "–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç";
    subtitle.textContent = "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É";
    submitBtn.textContent = "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è";
  } else {
    title.textContent = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å";
    subtitle.textContent = "–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç";
    submitBtn.textContent = "–í–æ–π—Ç–∏";
  }

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫
  hideMessages();
}

function togglePassword(inputId) {
  const input = document.getElementById(inputId);
  const toggle = input.nextElementSibling;

  if (input.type === "password") {
    input.type = "text";
    toggle.textContent = "üîí";
  } else {
    input.type = "password";
    toggle.textContent = "üëÅ";
  }
}

function showError(message) {
  errorMessage.textContent = message;
  errorMessage.style.display = "block";
  successMessage.style.display = "none";
}

function showSuccess(message) {
  successMessage.textContent = message;
  successMessage.style.display = "block";
  errorMessage.style.display = "none";
}

function hideMessages() {
  errorMessage.style.display = "none";
  successMessage.style.display = "none";
}

function setLoading(state) {
  const form = document.querySelector(".auth-form");
  const submitBtn = document.querySelector(".form-submit");

  if (state) {
    form.classList.add("loading");
    submitBtn.textContent = "–ó–∞–≥—Ä—É–∑–∫–∞...";
    submitBtn.disabled = true;
  } else {
    form.classList.remove("loading");
    const currentTab = form.getAttribute("data-tab");
    submitBtn.textContent =
      currentTab === "login" ? "–í–æ–π—Ç–∏" : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è";
    submitBtn.disabled = false;
  }
}

function validateForm() {
  const form = document.querySelector(".auth-form");
  const currentTab = form.getAttribute("data-tab");
  let isValid = true;

  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ—à–∏–±–æ–∫
  const inputs = form.querySelectorAll("input");
  inputs.forEach((input) => {
    input.style.borderColor = "rgba(255, 184, 0, 0.3)";
  });

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ email
  const emailInput = document.getElementById(
    currentTab === "login" ? "loginEmail" : "loginEmail"
  );
  const email = emailInput.value.trim();
  if (!email) {
    emailInput.style.borderColor = "red";
    showError("Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è");
    isValid = false;
  } else if (!/\S+@\S+\.\S+/.test(email)) {
    emailInput.style.borderColor = "red";
    showError("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email");
    isValid = false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
  const passwordInput = document.getElementById(
    currentTab === "login" ? "loginPassword" : "loginPassword"
  );
  const password = passwordInput.value.trim();
  if (!password) {
    passwordInput.style.borderColor = "red";
    showError("–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è");
    isValid = false;
  } else if (password.length < 6) {
    passwordInput.style.borderColor = "red";
    showError("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤");
    isValid = false;
  }

  // –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è
  if (currentTab === "register") {
    const nameInput = document.getElementById("registerName");
    const name = nameInput.value.trim();
    if (!name) {
      nameInput.style.borderColor = "red";
      showError("–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è");
      isValid = false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
    const agreementCheckbox = document.getElementById("agreement");
    if (!agreementCheckbox.checked) {
      showError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è");
      isValid = false;
    }
  }

  return isValid;
}

async function handleRegister() {
  const email = document.getElementById("loginEmail").value.trim();
  const password = document.getElementById("loginPassword").value;
  const full_name = document.getElementById("registerName").value.trim();

  try {
    const response = await fetch(REGISTER_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        email,
        full_name,
        password,
      }),
    });

    const data = await response.json();

    if (response.ok) {
      showSuccess("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.");
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –≤—Ö–æ–¥–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      setTimeout(() => switchTab("login"), 2000);
    } else {
      showError(data.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
    }
  } catch (error) {
    showError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.");
  }
}

async function handleLogin() {
  const email = document.getElementById("loginEmail").value.trim();
  const password = document.getElementById("loginPassword").value;

  try {
    const response = await fetch(LOGIN_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        email,
        password,
      }),
    });

    const data = await response.json();

    if (response.ok) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ localStorage
      localStorage.setItem("authToken", data.token);
      localStorage.setItem("userEmail", email);

      showSuccess("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!");

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
      setTimeout(() => {
        window.location.href = "/";
      }, 1000);
    } else {
      showError(data.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ");
    }
  } catch (error) {
    showError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.");
  }
}

async function handleSubmit() {
  hideMessages();

  if (!validateForm()) {
    return;
  }

  setLoading(true);

  const currentTab = document
    .querySelector(".auth-form")
    .getAttribute("data-tab");

  if (currentTab === "register") {
    await handleRegister();
  } else {
    await handleLogin();
  }

  setLoading(false);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function checkAuth() {
  const token = localStorage.getItem("authToken");
  if (token) {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
    window.location.href = "/";
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener("DOMContentLoaded", function () {
  checkAuth();

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ —Ñ–æ—Ä–º–∞—Ö
  document.querySelectorAll(".form-input").forEach((input) => {
    input.addEventListener("keypress", function (e) {
      if (e.key === "Enter") {
        handleSubmit();
      }
    });
  });
});
